# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Audit Sap Log Aggregator build - RELEASE

on:
  push:
    branches: [ main ]

env:
  PROJECT_NAME: catalog-services
  #AWS_REGION: ap-southeast-2

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2
#        with:
#          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Setup Maven settings
        uses: s4u/maven-settings-action@v2.6.0
#        with:
#          githubServer: false
#          servers: '[
#                      {"id": "github", "username": "${env.USER_NAME}", "password": "${env.ACCESS_TOKEN}"}
#                         ]'

      - name: Build with Maven
        run: mvn package --no-transfer-progress
        env:
#          USER_NAME: ${{ secrets.PERSONAL_ACCESS_TOKEN_USERNAME }}
#          ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          QUARKUS_APPLICATION_VERSION: ${{ github.sha }}

#      - name: Configure AWS Credentials - OIDC
#        uses: aws-actions/configure-aws-credentials@2be883a47f447f8ec9c0c785288c7c86fdbbd9a7
#        with:
#          aws-region: ${{ env.AWS_REGION }}
#          role-to-assume: arn:aws:iam::1212121212:role/system/GithubActions

#      - name: Login to Amazon ECR
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@v1

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
#        with:
#          github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

#      - name: Build, tag, and push image to Amazon ECR
#        env:
#          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          ECR_REPOSITORY: myrepo/catalog-service
#          IMAGE_TAG: ${{ github.sha }}
#          IMAGE_TAG_VERSION: ${{ steps.tag_version.outputs.new_tag }}
#        run: |
#          docker build -f src/main/docker/Dockerfile.jvm -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_VERSION  .
#          docker push --all-tags $ECR_REGISTRY/$ECR_REPOSITORY

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

